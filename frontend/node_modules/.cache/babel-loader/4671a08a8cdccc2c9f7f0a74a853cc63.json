{"ast":null,"code":"var _jsxFileName = \"/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/testimonials-react+api_express/frontend/src/ui/App/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getListComments } from \"../../core/services/comments/getListComments\"; // import {getListCommentsFake as getListComments} from \"../../core/services/comments/getListCommentsFake\"\n\nimport { CommentItem } from '../components/CommentItem';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const initComments = async () => {\n      const commentsLoad = await getListComments();\n      setComments(commentsLoad);\n    };\n\n    initComments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App cw\",\n    children: comments.map((comment, index) => {\n      return /*#__PURE__*/_jsxDEV(CommentItem, {\n        image: comment.image,\n        name: comment.name,\n        verified: comment.verified,\n        title: comment.title,\n        content: comment.content,\n        className: comment.className,\n        bg: comment.bg,\n        colorText: comment.colorText,\n        large: comment.large\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/DATOS/NATACHA_DEV/frontend-mentor/challenges/testimonials-react+api_express/frontend/src/ui/App/App.tsx"],"names":["React","useState","useEffect","getListComments","CommentItem","App","comments","setComments","initComments","commentsLoad","map","comment","index","image","name","verified","title","content","className","bg","colorText","large"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAAQC,eAAR,QAA8B,8CAA9B,C,CACA;;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,OAAO,WAAP;;;AAcA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAgB,EAAhB,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,YAAY,GAAG,YAAY;AAC/B,YAAMC,YAAY,GAAG,MAAMN,eAAe,EAA1C;AACAI,MAAAA,WAAW,CAACE,YAAD,CAAX;AACD,KAHD;;AAIAD,IAAAA,YAAY;AACb,GANQ,EAMN,EANM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cACKF,QAAQ,CAACI,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAChC,0BACE,QAAC,WAAD;AAEE,QAAA,KAAK,EAAED,OAAO,CAACE,KAFjB;AAGE,QAAA,IAAI,EAAEF,OAAO,CAACG,IAHhB;AAIE,QAAA,QAAQ,EAAEH,OAAO,CAACI,QAJpB;AAKE,QAAA,KAAK,EAAEJ,OAAO,CAACK,KALjB;AAME,QAAA,OAAO,EAAEL,OAAO,CAACM,OANnB;AAOE,QAAA,SAAS,EAAEN,OAAO,CAACO,SAPrB;AAQE,QAAA,EAAE,EAAEP,OAAO,CAACQ,EARd;AASE,QAAA,SAAS,EAAER,OAAO,CAACS,SATrB;AAUE,QAAA,KAAK,EAAET,OAAO,CAACU;AAVjB,SACOT,KADP;AAAA;AAAA;AAAA;AAAA,cADF;AAcD,KAfA;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA9BD;;GAAMP,G;;KAAAA,G;AAgCN,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect}  from 'react';\nimport {getListComments} from \"../../core/services/comments/getListComments\";\n// import {getListCommentsFake as getListComments} from \"../../core/services/comments/getListCommentsFake\"\nimport {CommentItem} from '../components/CommentItem';\nimport './App.css';\n\nexport type CommentType =  {\n  image: string,\n  name: string,\n  verified: string,\n  title: string,\n  content: string,\n  className: string,\n  bg: string,\n  colorText: string,\n  large: string, \n};\n\nconst App = () => {\n  const [comments, setComments] = useState<CommentType[]>([]);\n\n  useEffect(() => {\n    const initComments = async () => {\n      const commentsLoad = await getListComments();\n      setComments(commentsLoad)\n    }\n    initComments();\n  }, []);\n  return (\n    <div className=\"App cw\">\n        {comments.map((comment, index) => {\n          return (\n            <CommentItem\n              key={index}\n              image={comment.image}\n              name={comment.name}\n              verified={comment.verified}\n              title={comment.title}\n              content={comment.content}\n              className={comment.className}\n              bg={comment.bg}\n              colorText={comment.colorText}\n              large={comment.large}\n            />\n          );\n        })}\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}